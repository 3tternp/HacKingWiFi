#!/bin/sh
#!/bin/bash
#!/usr/bin/bash
#!/usr/bin/env bash
#!/data/data/com.termux/files/usr/bin/bash
###############################################
# Name : Anlominus ~ HacKingWiFi
# Description : HacKingWiFi ~ Get your target and Hack It.
# Date : 2022 May
Anlominus="Anlominus"
# Last UPDATE : 2022 May 28
# Aouther: Anlominus ~> RhytMix ~> HacKingWiFi
# Skils: Best Copywriter IN the COSMOS!
# BIG THANX TO ALL COMUNITY THAT SHARE ALL THAT FREE GREAT SCRIPTS
# CREDIT: To All World Creators free Scripts & Tools
# Location: Made With LOVE IN ISRAEL !
# Source: https://github.com/Anlominus/HacKingWiFi
###############################################
clear
# CODE Functions
# checking for system package manager
if [ -e /data/data/com.termux/files/usr/bin/pkg ]; then
  pac="pkg"
  system="termux"
elif [ `command -v brew` ]; then
  pac="brew"
  system="mac"
   sudo=""
elif [ `command -v apt` ]; then
  pac="apt"
  system="linux"
elif [ `command -v apt-get` ]; then
  pac="apt-get"
  system="linux"
elif [ `command -v apk` ]; then
  pac="apk"
  system="linux"
elif [ `command -v yum` ]; then
  pac="yum"
  system="fedora"
fi

RunColors(){
##############################################################################
# COLORS AND BACKGROUNDS
##############################################################################
Color_Off='\033[0m' # Text Reset

# Regular Colors
Black='\033[0;30m'  # Black
Red='\033[0;31m'    # Red
Green='\033[0;32m'  # Green
Yellow='\033[0;33m' # Yellow
Blue='\033[0;34m'   # Blue
Purple='\033[0;35m' # Purple
Cyan='\033[0;36m'   # Cyan
White='\033[0;97m'  # White

# Additional colors
LGrey='\033[0;37m'   # Ligth Gray
DGrey='\033[0;90m'   # Dark Gray
LRed='\033[0;91m'    # Ligth Red
LGreen='\033[0;92m'  # Ligth Green
LYellow='\033[0;93m' # Ligth Yellow
LBlue='\033[0;94m'   # Ligth Blue
LPurple='\033[0;95m' # Light Purple
LCyan='\033[0;96m'   # Ligth Cyan


# Bold
BBlack='\033[1;30m'  # Black
BRed='\033[1;31m'    # Red
BGreen='\033[1;32m'  # Green
BYellow='\033[1;33m' # Yellow
BBlue='\033[1;34m'   # Blue
BPurple='\033[1;35m' # Purple
BCyan='\033[1;36m'   # Cyan
BWhite='\033[1;37m'  # White

# Underline
UBlack='\033[4;30m'  # Black
URed='\033[4;31m'    # Red
UGreen='\033[4;32m'  # Green
UYellow='\033[4;33m' # Yellow
UBlue='\033[4;34m'   # Blue
UPurple='\033[4;35m' # Purple
UCyan='\033[4;36m'   # Cyan
UWhite='\033[4;37m'  # White

# Background
On_Black='\033[40m'  # Black
On_Red='\033[41m'    # Red
On_Green='\033[42m'  # Green
On_Yellow='\033[43m' # Yellow
On_Blue='\033[44m'   # Blue
On_Purple='\033[45m' # Purple
On_Cyan='\033[46m'   # Cyan
On_White='\033[47m'  # White
}
RunColors

MainMenu(){
  while true; do
  #statements
  clear
  # HacKingWiFiLogo1
  HacKingWiFiMenuMain=$(echo "${BRed}
  \n${BBlue}- ${BRed}[${LGrey}---------------------------------------------------------------------------${BRed}]${BBlue} - \n
          ${BBlue}[${BRed}#${BBlue}] ðŸ“œ Menu

          ${BBlue}[${BRed}#${BBlue}] ðŸ“œ Target IP: ${BRed}${targetIP}
          ${BBlue}[${BRed}#${BBlue}] ðŸ“œ Target Name: ${BRed}${targetNAME}
          \n${BBlue}- ${BRed}[${LGrey}---------------------------------------------------------------------------${BRed}]${BBlue} - \n
          ${BRed}[${LGrey}A${BRed}]${BBlue} -${DGrey} DownLoad WiFi HacKing Tools
          \n${BBlue}- ${BRed}[${LGrey}---------------------------------------------------------------------------${BRed}]${BBlue} - \n
          ${BRed}[${LGrey}1${BRed}]${BBlue} -${DGrey} Choosing Wireless Adapter / Get Interface:
          \n${BBlue}- ${BRed}[${LGrey}---------------------------------------------------------------------------${BRed}]${BBlue} - \n
          ${BRed}[${LGrey}2${BRed}]${BBlue} -${DGrey} Start Monitoring Mode & Checking Injection Option
          ${BRed}[${LGrey}2.1${BRed}]${BBlue} -${DGrey} Starting Monitor mode: airmon-ng start $INTERFACE
          ${BRed}[${LGrey}2.2${BRed}]${BBlue} -${DGrey} Monitoring: aireplay-ng --test $INTERFACE
          \n${BBlue}- ${BRed}[${LGrey}---------------------------------------------------------------------------${BRed}]${BBlue} - \n
          ${BRed}[${LGrey}3${BRed}]${BBlue} -${DGrey} Scan Wirelessâ€™s Area
          ${BRed}[${LGrey}3.1${BRed}]${BBlue} -${DGrey} Sniff Networks Area Information : airodump-ng $INTERFACE
          ${BRed}[${LGrey}3.2${BRed}]${BBlue} -${DGrey} Start Capturing Packets: airodump-ng --bssid $BSSID -c $CHANNEL_NUMBER -w $OUTPUT_NAME $INTERFACE
          ${BRed}[${LGrey}3.3${BRed}]${BBlue} -${DGrey} Inject Packets into Wireless Network: aireplay-ng --deauth 10 -a $MAC_TARGET $INTERFACE
          \n${BBlue}- ${BRed}[${LGrey}---------------------------------------------------------------------------${BRed}]${BBlue} - \n
          ${BRed}[${LGrey}4${BRed}]${BBlue} -${DGrey} Analysis Captured Files With WireShark:
          ${BRed}[${LGrey}4.1${BRed}]${BBlue} -${DGrey} Start WireShark: wireshark $OUTPUT_NAME.cap
          \t${BRed}[${LGrey}-${BRed}]${BBlue} -${DGrey} Looking for Authentication Files
          \n${BBlue}- ${BRed}[${LGrey}---------------------------------------------------------------------------${BRed}]${BBlue} - \n
          ${BRed}[${LGrey}5${BRed}]${BBlue} -${DGrey} Analysis & Reporting
          \n${BBlue}- ${BRed}[${LGrey}---------------------------------------------------------------------------${BRed}]${BBlue} - \n

          ${BRed}[${LGrey}x${BRed}]${BWhite} -${DGrey} Exit / Quit / Close


${BCyan}            â”Œâ”€â”€${BBlue}[${BBlue} Anlominus ðŸ‘½${BRed} HacKingWiFi ${BCyan}$~${BBlue}]
${BCyan}            â””â”€â”€â•¼ ")
    read -p "$HacKingWiFiMenuMain" cmd
    case $cmd in
      a|A )
      HacKingWiFiTools() {
          mkdir AnlominusPro
          cd AnlominusPro
          clear
          #statements git clone https://github.com/
          echo "\n${LBlue} ------------- [ ${LGreen}Started Downloading ${LBlue}] - Wireless HacKing Tools${LGreen}\n"
          sleep 1
          echo "${BBlue}\n\t\t - [aircrack-ng]${BGreen}\n\t\t\t(https://github.com/aircrack-ng/aircrack-ng)\n${BYellow}"
          sleep 1
          git clone https://github.com/aircrack-ng/aircrack-ng
          echo "${BBlue}\n\t\t - [FruityWifi]${BGreen}\n\t\t\t(https://github.com/xtr4nge/FruityWifi)\n${BYellow}"
          sleep 1
          git clone https://github.com/xtr4nge/FruityWifi
          echo "${BBlue}\n\t\t - [bettercap]${BGreen}\n\t\t\t(https://github.com/bettercap/bettercap)\n${BYellow}"
          sleep 1
          git clone https://github.com/bettercap/bettercap
          echo "${BBlue}\n\t\t - [WiFi-Pumpkin]${BGreen}\n\t\t\t(https://github.com/P0cL4bs/WiFi-Pumpkin)\n${BYellow}"
          sleep 1
          git clone https://github.com/P0cL4bs/WiFi-Pumpkin
          echo "${BBlue}\n\t\t - [Wifipumpkin3]${BGreen}\n\t\t\t(https://github.com/P0cL4bs/wifipumpkin3)\n${BYellow}"
          sleep 1
          git clone https://github.com/P0cL4bs/wifipumpkin3
          echo "${BBlue}\n\t\t - [Airgeddon]${BGreen}\n\t\t\t(https://github.com/v1s1t0r1sh3r3/airgeddon)\n${BYellow}"
          sleep 1
          git clone https://github.com/v1s1t0r1sh3r3/airgeddon
          echo "${BBlue}\n\t\t - [Airbash]${BGreen}\n\t\t\t(https://github.com/tehw0lf/airbash)\n${BYellow}"
          sleep 1
          git clone https://github.com/tehw0lf/airbash
          echo "${BBlue}\n\t\t - [WireSpy]${BGreen}\n\t\t\t(https://github.com/aress31/wirespy)\n${BYellow}"
          sleep 1
          git clone https://github.com/aress31/wirespy
          echo "${BBlue}\n\t\t - [aircrack-ng-gui]${BGreen}\n\t\t\t(https://github.com/t-gitt/aircrack-ng-gui)\n${BYellow}"
          sleep 1
          git clone https://github.com/t-gitt/aircrack-ng-gui
          echo "${BBlue}\n\t\t - [Websploit]${BGreen}\n\t\t\t(https://github.com/f4rih/websploit)\n${BYellow}"
          sleep 1
          git clone https://github.com/f4rih/websploit
          echo "${BBlue}\n\t\t - [LazyAircrack]${BGreen}\n\t\t\t(https://github.com/3xploitGuy/lazyaircrack)\n${BYellow}"
          sleep 1
          git clone https://github.com/3xploitGuy/lazyaircrack
          echo "${BBlue}\n\t\t - [SniffAir]${BGreen}\n\t\t\t(https://github.com/Tylous/SniffAir)\n${BYellow}"
          sleep 1
          git clone https://github.com/Tylous/SniffAir
          echo "${BBlue}\n\t\t - [Kismet]${BGreen}\n\t\t\t(https://github.com/kismetwireless/kismet)\n${BYellow}"
          sleep 1
          git clone https://github.com/kismetwireless/kismet
          echo "${BBlue}\n\t\t - [AirStrike]${BGreen}\n\t\t\t(https://github.com/redcode-labs/AirStrike)\n${BYellow}"
          sleep 1
          git clone https://github.com/redcode-labs/AirStrike
          echo "${BBlue}\n\t\t - [Wireless IDS]${BGreen}\n\t\t\t(https://github.com/SYWorks/wireless-ids)\n${BYellow}"
          sleep 1
          git clone https://github.com/SYWorks/wireless-ids
          echo "${BBlue}\n\t\t - [Fern Wifi Cracker]${BGreen}\n\t\t\t(https://github.com/savio-code/fern-wifi-cracker)\n${BYellow}"
          sleep 1
          git clone https://github.com/savio-code/fern-wifi-cracker
          echo "${BBlue}\n\t\t - [OWT]${BGreen}\n\t\t\t(https://github.com/clu3bot/OWT)\n${BYellow}"
          sleep 1
          git clone https://github.com/clu3bot/OWT
          echo "${BBlue}\n\t\t - [getAir2U]${BGreen}\n\t\t\t(https://github.com/v1s1t0r999/getAir2U)\n${BYellow}"
          sleep 1
          git clone https://github.com/v1s1t0r999/getAir2U
          echo "${BBlue}\n\t\t - [BeaconGraph]${BGreen}\n\t\t\t(https://github.com/daddycocoaman/BeaconGraph)\n${BYellow}"
          sleep 1
          git clone https://github.com/daddycocoaman/BeaconGraph
          echo "${BBlue}\n\t\t - [Wifi-Hacker]${BGreen}\n\t\t\t(https://github.com/esc0rtd3w/wifi-hacker)\n${BYellow}"
          sleep 1
          git clone https://github.com/esc0rtd3w/wifi-hacker
          echo "${BBlue}\n\t\t - [Wifite2]${BGreen}\n\t\t\t(https://github.com/derv82/wifite2)\n${BYellow}"
          sleep 1
          git clone https://github.com/derv82/wifite2
          echo "${BBlue}\n\t\t - [Infernal-Wireless v3]${BGreen}\n\t\t\t(https://github.com/entropy1337/infernal-twin)\n${BYellow}"
          sleep 1
          git clone https://github.com/entropy1337/infernal-twin
          echo "${BBlue}\n\t\t - [BoopSuite]${BGreen}\n\t\t\t(https://github.com/MisterBianco/BoopSuite)\n${BYellow}"
          sleep 1
          git clone https://github.com/MisterBianco/BoopSuite
          echo "${BBlue}\n\t\t - [NetAttack2]${BGreen}\n\t\t\t(https://github.com/chrizator/netattack2)\n${BYellow}"
          sleep 1
          git clone https://github.com/chrizator/netattack2
          echo "${BBlue}\n\t\t - [HT-WPS-Breaker]${BGreen}\n\t\t\t(https://github.com/SilentGhostX/HT-WPS-Breaker)\n${BYellow}"
          sleep 1
          git clone https://github.com/SilentGhostX/HT-WPS-Breaker
          echo "${BBlue}\n\t\t - [KisMac2]${BGreen}\n\t\t\t(https://github.com/IGRSoft/KisMac2)\n${BYellow}"
          sleep 1
          git clone https://github.com/IGRSoft/KisMac2
          echo "\n${LBlue} ------------- [ ${LGreen}FINISHED ${LBlue}] - Wireless HacKing Tools ${LGreen}\n"
          sleep 3
          clear
          echo "\n${LBlue} --------- [ ${LGreen}Installed Tools${LBlue} ] ---------${LGreen}\n"
          cd ..
          ls -l1 AnlominusPro/ > Installed.log
          echo " "
          cat Installed.log
          echo " "
          echo "\n${LBlue} --------- [ ${LGreen}Installed Tools${LBlue} ] ---------${LGreen}\n"

      }
      HacKingWiFiTools

      ;;
      1 )
      while true; do
      #statements
      clear
      HacKingWiFiMenu1=$(echo "
      \n\t\t${BRed}[${LGrey}1${BRed}]${BBlue} -${DGrey} Choosing Wireless Adapter / Get Interface:
      \n\t\t${BRed}[${LGrey}1.1${BRed}]${BBlue} -${DGrey}  Cheking for Wireless Network interface: iwconfig
      \n\t\t${BRed}[${LGrey}1.2${BRed}]${BBlue} -${DGrey}  Cheking for Wireless Network interface: ifconfig
      ")
      read -p "$HacKingWiFiMenu1" cmd
      case $cmd in
        1.1 )
        iwconfig
        read 123
        ;;
        1.2 )
        choose_Interface=$(echo "$(ifconfig | grep UP | awk '{print $1}' | tr ":" " ")")
        # category function
        category() {
          while true; do
            clear
            # get all category data
            echo "
            ${BBlue}  ___
            //___// ${BYellow}Chooe Network Interface
        "
            for i_Net in $choose_Interface ; do
              echo " $MainMenu[!@]"
              # display category alias name from data
              for s_Net in $i_Net; do
                echo " ${green}  $s_Net"
              done
            done
            echo " ${green} 0 Back"
            echo "$prompt"
            read cmd
            # count total number of category
            list=`grep -n "." $choose_Interface | wc -l`
            # process user input
            case ${cmd} in
              [1-9]|[1-9][0-9])
                if [ ${cmd} -le $list ]; then
                  while [ true ]; do
                    clear
                    # display all tools of selected category
                    category=`grep '.' $choose_Interface | sed -n "${cmd} p" `
                    category_alias=`grep '.' $choose_Interface | sed -n "${cmd} p" `
                    # get all tools data and display
                    echo " ${red} ___
        //___// ${yellow}$category_alias
        "
                    for data in $choose_Interface ; do
                      # display tools name from data
                      for tool in $data; do
                        echo " ${green} $tool" | tr '|' ' ' | tr '@' ' '
                      done
                    done
                    echo " ${green} 0 Back"
                    echo "$prompt"
                    read tmp_cmd
                    # count total number of tools in category
                    list=$(echo "$(ifconfig | grep UP | awk '{print $1}' | tr ":" " ")" | wc -l)
                    # list=`grep -n "." $tools_data | sed -n "/$category/p" | wc -l`
                    # process user input
                    case $tmp_cmd in
                      [1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9])
                        if [ $tmp_cmd -le $list ]; then
                          # Show tools
                           echo "$category $tmp_cmd"
                        else
                          echo "${red}$tmp_cmd: ${purple}invalid option!!"
                          sleep 1
                        fi
                      ;;
                        0|back|Back)
                        break
                      ;;
                      *)
                        echo "${red}'$tmp_cmd': ${purple}invalid option!!"
                        sleep 1
                      ;;
                    esac
                  done
                else
                  echo "${red}${cmd}: ${purple}invalid option!!"
                  sleep 1
                fi
              ;;
              0|back|Back)
                break
              ;;
              *)
                echo "${red}${cmd}: ${purple}invalid option!!"
                sleep 1
              ;;
            esac
          done
        }
        category

        read 123
        ;;

        x )
        clear
        exit
        ;;


      esac
    done

      ;;
      2 )
      clear
      echo "\n\t\t${BRed}[${BBlue}2${BRed}]${BWhite} -${BRed} Reconnaissance & Vulnerability Assessment"
      ;;
      3 )
      clear
      echo "\n\t\t${BRed}[${BBlue}3${BRed}]${BWhite} -${BRed} Gaining Access & Maintaining Access"
      ;;
      4 )
      clear
      echo "\n\t\t${BRed}[${BBlue}4${BRed}]${BWhite} -${BRed} Covering tracks"
      ;;
      5 )
      clear
      echo "\n\t\t${BRed}[${BBlue}5${BRed}]${BWhite} -${BRed} Analysis & Reporting"
      ;;
      x )
      clear
      exit
      ;;
    esac
  done
}
MainMenu
